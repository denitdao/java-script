AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Cluster with related resources.

Parameters:
  ClusterName:
    Type: String
    Default: java-script-cluster-cf

  TaskDefName:
    Type: String
    Default: java-script-fargate-cf-taskdef

  AwsApplicationResourceGroup:
    Type: String
    Default: 'use your id'

  ContainerImageURI:
    Type: String
    Description: Url to the image. Get it from ECS stack output. In format [<aws-url>/<repository-name>:latest]
    Default: ''

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      ClusterSettings:
        - Name: containerInsights
          Value: disabled
      Configuration:
        ExecuteCommandConfiguration:
          Logging: DEFAULT
      Tags:
        - Key: app
          Value: java-script
        - Key: awsApplication
          Value: !Ref AwsApplicationResourceGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref TaskDefName
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: ARM64
      Cpu: '256'
      Memory: '1024'
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: java-script-container
          Image: !Ref ContainerImageURI
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: ECSExecutionPolicy
          PolicyDocument:
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:GetRepositoryPolicy'
                  - 'ecr:DescribeRepositories'
                  - 'ecr:ListImages'
                  - 'ecr:DescribeImages'
                  - 'ecr:BatchGetImage'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${TaskDefName}'
      RetentionInDays: 14

Outputs:
  ECSCluster:
    Description: The created cluster.
    Value: !Ref ECSCluster
  ECSTaskDefinition:
    Description: The created Task Definition.
    Value: !Ref TaskDefinition
